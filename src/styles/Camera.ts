import { StyleSheet } from "react-native";
import { ColorScheme } from "./colors";
import { BorderRadius, Shadow, Spacing } from "./designTokens";

export const createCameraStyles = (colors: ColorScheme) => StyleSheet.create({
  container: {
    flex: 1,
    position: 'relative',
    backgroundColor: colors.background.tertiary,
  },
  overlay: {
    ...StyleSheet.absoluteFillObject,
    justifyContent: 'center',
    alignItems: 'center',
    backgroundColor: colors.gray[900] + '80',
  },
  cameraContainer: {
    flex: 1,
    alignItems: 'center',
    justifyContent: 'center',
    backgroundColor: colors.gray[800],
    position: 'relative',
  },
  videoElement: {
    display: 'none',
  },
  cameraFrame: {
    width: '90%',
    aspectRatio: 1,
    maxWidth: 720,
    maxHeight: 720,
    borderWidth: 3,
    borderStyle: 'dashed',
    borderColor: colors.gray[400] + '80',
    borderRadius: BorderRadius.md,
    overflow: 'hidden',
    justifyContent: 'center',
    alignItems: 'center',
    backgroundColor: colors.gray[700],
    ...Shadow(colors).lg,
  },
  canvasElement: {
    position: 'absolute',
    top: 0,
    left: 0,
    width: '100%',
    height: '100%',
    resizeMode: 'cover',
  },
  circleWrapper: {
    position: 'absolute',
    width: '85%',
    height: '85%',
    display: 'flex',
    flexDirection: 'row',
    flexWrap: 'wrap',
    justifyContent: 'space-between',
    alignContent: 'space-between',
    zIndex: 10,
  },
  circleHolder: {
    width: '30%',
    aspectRatio: 1,
    justifyContent: 'center',
    alignItems: 'center',
  },
  circle: {
    width: 28,
    height: 28,
    borderRadius: 14,
    backgroundColor: colors.feedback.error + 'B3',
    borderWidth: 2,
    borderColor: colors.gray[100] + 'E6',
    ...Shadow(colors).md,
  },
  circleAligned: {
    backgroundColor: colors.feedback.success + 'B3',
    shadowColor: colors.feedback.success + 'B3',
  },
  instructionsOverlay: {
    position: 'absolute',
    top: Spacing.xl,
    left: '50%',
    transform: [{ translateX: -50 }],
    backgroundColor: colors.gray[900] + 'B3',
    paddingVertical: Spacing.md,
    paddingHorizontal: Spacing.xl,
    borderRadius: BorderRadius.round,
    zIndex: 20,
    width: '90%',
    maxWidth: 500,
  },
  instructionsText: {
    fontSize: 16,
    color: colors.text.onPrimary,
    textAlign: 'center',
    marginBottom: Spacing.sm,
  },
  statusText: {
    fontSize: 20,
    fontWeight: 'bold',
    textAlign: 'center',
  },
  statusAligned: {
    color: colors.feedback.success,
    textShadowColor: colors.feedback.success + '99',
    textShadowOffset: { width: 0, height: 0 },
    textShadowRadius: 8,
  },
  statusNotAligned: {
    color: colors.feedback.error,
    textShadowColor: colors.feedback.error + '66',
    textShadowOffset: { width: 0, height: 0 },
    textShadowRadius: 8,
  },
  captureButton: {
    position: 'absolute',
    bottom: Spacing.xl,
    width: 70,
    height: 70,
    borderRadius: 35,
    backgroundColor: colors.feedback.error,
    borderWidth: 4,
    borderColor: colors.background.secondary,
    justifyContent: 'center',
    alignItems: 'center',
    ...Shadow(colors).lg,
  },
  captureButtonDisabled: {
    backgroundColor: colors.gray[500],
    opacity: 0.6,
  },
  captureButtonIcon: {
    fontSize: 30,
    color: colors.text.onPrimary,
  },
});